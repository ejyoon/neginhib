##AEN Negpad felicity
rm(list=ls())
#Load libraries
library(reshape2)
library(dplyr)
library(ggplot2)
source("~/Documents/R/aen.useful.R")
#Load in data
path <- "~/Documents/R/negpad/negpad_felicity_kids/data/"
files <- dir(path)
d <- data.frame()
for (f in files) {
this.file <- read.csv(paste(path, f, sep=""), header=FALSE)
names(this.file) <- c("subid","condition","trial.num","item","sent.type","truth","resp")
d <- rbind(d, this.file)
}
#remove practice trials
d <- filter(d, item != "bunny" & item != "cupcake" & item != "cup" & item != "bear")
##Fix one subid
levels(d$subid) <- c(levels(d$subid), "O30515-07")
d$subid[d$subid=="030515-06" & d$condition=="target"] <- "O30515-07"
#Load in demographics
dems <- read.csv("~/Documents/R/negpad/negpad_felicity_kids/demographics/demographics.csv")
dems <- dems[dems$exclude == 0,]
dems <- dems[dems$agegroup == 3 | dems$agegroup == 4,]
dems <- dems[dems$english=="100" | dems$english=="90" | dems$english=="75",]
ages <- na.omit(dems[,c("subid","agegroup")])
all.data <- merge(d, ages)
##Condense scale (1=bad, 2=neutral, 3=good)
all.data$resp2 <- 2
all.data[all.data$resp > 3,]$resp2 <- 3
all.data[all.data$resp < 3,]$resp2 <- 1
all.data$resp2 <- factor(all.data$resp2)
#reject subjects who don't understand scale (based on positive sentences)
reject <- all.data %>%
filter(sent.type=="positive") %>% #Only look at positive sentences
group_by(subid) %>%
mutate(total = n()) %>% #get total # of positive sentences child saw
group_by(subid, condition, truth, total, resp2) %>%
filter((truth=="True" & resp2==3) | (truth=="False" & resp2==1)) %>% #Get # "good" for true pos and "bad" for false pos
summarize(counts = n()) %>%
group_by(subid, condition, total) %>%
summarize(counts = sum(counts)) %>% #total # "correct" responses
mutate(prop = counts/total) %>% #proportion correct
filter(prop < .6) #reject kids who got < .6 "correct" (this allows for 2/6 "mistakes")
for (i in reject$subid) {
all.data <- filter(all.data, subid !=i)
}
#Make sure there aren't any kids who just used one side of scale.
scaleUse <- aggregate(resp2 ~ subid, all.data, n.unique)
table(scaleUse$resp2) #Are any resp2=1
#now reject kids who only chose a single data point
##Categorize kids based on response type
tn_responses <- all.data %>%
filter(sent.type=="negative" & truth=="True") %>%
group_by(subid) %>%
mutate(total = n()) %>%
group_by(subid, condition, total, resp2) %>%
summarize(counts = n()) %>%
mutate(prop = counts/total)
category <- dcast(tn_responses, subid + condition ~ resp2)
names(category) <- c("subid","condition","bad","neutral","good")
category[is.na(category)] <- 0
category$type <- "other"
#category[category$neutral > .6,]$type <- "tn_neutral"
category[category$bad > .6,]$type <- "tn_bad"
category[category$good > .6,]$type <- "tn_good"
cat_counts <- category %>%
group_by(condition, type) %>%
summarise(counts = n())
cat_counts$condition <- factor(cat_counts$condition, levels=c("none","target"), labels=c("None","Target"))
cat_counts$type <- factor(cat_counts$type, levels=c("tn_bad","tn_good","other"), labels=c("True Negatives = Bad", "True Negatives = Good", "Inconsistent/Other"))
qplot(data=cat_counts, x=condition, y=counts, fill=type,
stat="identity", position="dodge", geom="bar") +
scale_fill_hue("Response Type") +
ylab("Count") + xlab("Context Condition") +
plot.style
aggregate(subid ~ agegroup + condition, all.data, n.unque)
aggregate(subid ~ agegroup + condition, all.data, n.unique)
path <- "~/Documents/Work/Research/Negation/neginhib/"
files <- dir(path)
fils
files
files
path <- "~/Documents/Work/Research/Negation/neginhib/data/"
neginhib
path
files <- dir(path)
files
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot"
files <- dir(path)
files
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results"
files <- dir(path)
files
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results"
files <- dir(path)
files
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results"
files <- dir(path)
files
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results"
files <- dir(path)
files
this.file <- read.table(paste(path, f, sep=""), header=FALSE)
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results"
files <- dir(path)
files
f <- files[1]
f
this.file <- read.table(paste(path, f, sep=""), header=FALSE)
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results/"
files <- dir(path)
this.file <- read.table(paste(path, f, sep=""), header=FALSE)
this.file <- read.table(paste(path, f, sep="/"), header=FALSE)
this.file <- read.table(paste(path, f, sep="/t"), header=FALSE)
f
this.file <- read.table(paste(path, f, sep=""), sep="/t", header=FALSE)
this.file <- read.table(paste(path, f, sep=""), sep="/t", header=TRUE)
this.file <- read.table(paste(path, f, sep=""), header=TRUE)
this.file <- read.table(paste(path, f, sep=""), header=TRUE)
paste(path, f, sep="")
this.file <- read.csv(paste(path, f, sep=""), header=TRUE)
this.file
fromJSON(this.file)
library(rjson)
fromJSON(this.file)
str(this.file)
this.file[1]
fromJSON( file = paste(path, f, sep="") )
d <- as.data.frame(matrix(ncol = 4, nrow = 0)
)
d <- as.data.frame(matrix(ncol = 4, nrow = 0))
names(d) <- c("subid", "age", "gender", "language")
d
this.file
this.file <- fromJSON( file = paste(path, f, sep="") )
this.file
subid <- this.file$WorkerId
subid
age <- this.file$answers$data$age
age
gender <- this.file$answers$data$gender
gender
language <- this.file$$answers$data$nativeLanguage
language <- this.file$answers$data$nativeLanguage
language
cbind(subid, age)
cbind(subid, age, gender, language)
names(d) <- c("subid", "age", "gender", "language")
for (f in files) {
this.file <- fromJSON( file = paste(path, f, sep="") )
subid <- this.file$WorkerId
age <- this.file$answers$data$age
gender <- this.file$answers$data$gender
language <- this.file$answers$data$nativeLanguage
tmp <- cbind(subid, age, gender, language)
d <- rbind(d, tmp)
}
d
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results/"
files <- dir(path)
demo <- as.data.frame(matrix(ncol = 4, nrow = 0))
names(demo) <- c("subid", "age", "gender", "language")
for (f in files) {
this.file <- fromJSON( file = paste(path, f, sep="") )
subid <- this.file$WorkerId
age <- this.file$answers$data$age
gender <- this.file$answers$data$gender
language <- this.file$answers$data$nativeLanguage
tmp <- cbind(subid, age, gender, language)
demo <- rbind(d, tmp)
}
demo
##AEN generic-or
rm(list=ls())
#Load libraries
library(reshape2)
library(dplyr)
library(ggplot2)
library(rjson)
source("~/Documents/R/aen.useful.R")
##Load in data
#turk demo data
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results/"
files <- dir(path)
demo <- as.data.frame(matrix(ncol = 4, nrow = 0))
names(demo) <- c("subid", "age", "gender", "language")
for (f in files) {
this.file <- fromJSON( file = paste(path, f, sep="") )
subid <- this.file$WorkerId
age <- this.file$answers$data$age
gender <- this.file$answers$data$gender
language <- this.file$answers$data$nativeLanguage
tmp <- cbind(subid, age, gender, language)
demo <- rbind(d, tmp)
}
##AEN generic-or
rm(list=ls())
#Load libraries
library(reshape2)
library(dplyr)
library(ggplot2)
library(rjson)
source("~/Documents/R/aen.useful.R")
##Load in data
#turk demo data
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results/"
files <- dir(path)
demo <- as.data.frame(matrix(ncol = 4, nrow = 0))
names(demo) <- c("subid", "age", "gender", "language")
for (f in files) {
this.file <- fromJSON( file = paste(path, f, sep="") )
subid <- this.file$WorkerId
age <- this.file$answers$data$age
gender <- this.file$answers$data$gender
language <- this.file$answers$data$nativeLanguage
tmp <- cbind(subid, age, gender, language)
demo <- rbind(demo, tmp)
}
demo
expt <- read.csv("~/Documents/Work/Research/negation/neginhib/data/sandbox_pilot/neginhib_results.csv", header=F)
names(expt) <- c("subid","list","game.order","trial.num","word","leftpic","rightpic","game","trial.type","leftpic.type","rightpic.type","side.chosen","pic.chosen","response","date","timestamp","rt")
expts
expt
head(expt)
expt <- read.csv("~/Documents/Work/Research/negation/neginhib/data/sandbox_pilot/neginhib_results.csv", header=T)
expt
head(expt)
tail(read.csv)
tail(expt)
#csv data
expt <- read.csv("~/Documents/Work/Research/negation/neginhib/data/sandbox_pilot/neginhib_results.csv", header=T)
head(expt)
tail(expt)
d <- merge(expt, demo)
d
table(expt$subid)
tail(expt)
##AEN generic-or
rm(list=ls())
#Load libraries
library(reshape2)
library(dplyr)
library(ggplot2)
library(rjson)
source("~/Documents/R/aen.useful.R")
##Load in data
#turk demo data
path <- "~/Documents/Work/Research/Negation/neginhib/data/sandbox_pilot/sandbox-results/"
files <- dir(path)
demo <- as.data.frame(matrix(ncol = 4, nrow = 0))
names(demo) <- c("subid", "age", "gender", "language")
for (f in files) {
this.file <- fromJSON( file = paste(path, f, sep="") )
subid <- this.file$WorkerId
age <- this.file$answers$data$age
gender <- this.file$answers$data$gender
language <- this.file$answers$data$nativeLanguage
tmp <- cbind(subid, age, gender, language)
demo <- rbind(demo, tmp)
}
demo
#csv data
expt <- read.csv("~/Documents/Work/Research/negation/neginhib/data/sandbox_pilot/neginhib_results.csv", header=T)
expt <- read.csv("~/Documents/Work/Research/negation/neginhib/data/sandbox_pilot/neginhib_results.csv", header=F)
